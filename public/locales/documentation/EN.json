{
    "BASIC_IMPLEMENTATION" : "Basic Implementation",
    "PREPARING_NONCE" : "Preparing NONCE",
    "OBTAINING_AND_DECRYPTING_DATA" : "Obtaining and decrypting data",
    "OMID_SINTAXE" : "OMID Syntax",
    "GETTING_THE_PICTURES" : "Getting the pictures",
    "LONG_TEXT_01" : "In this model, note that return is an object with two properties (auth, nonce). The 'auth' property with the value 'TRUE' serves as the Flag of the status of the return, the nonce property must already be used to retrieve the requested data.When clicking the button a QRCode should appear on your screen.",
    "LONG_TEXT_02" : "The information requested in our example is: 'name', 'blockchainid' and 'email'. Request processing must be decrypted by the application's BACK-END, thus avoiding exposing its encryption keys.",
    "LONG_TEXT_03" : "Below we send an AJAX request with the 'nonce' obtained in the return of the call to the OMID object.",
    "LONG_TEXT_04" : "The programming language of your application must support UTF-8, Base64, Json, and Decryptography with 'aes256' algorithm.",
    "LONG_TEXT_05" : "The 'nonce' is sent via a POST request to our API. This request must contain in the HEADER 'OMID_KEY' Authorization and in the body 'cid' and 'nonce' The result of this request returns the user data obfuscated by an encryption algorithm. ",
    "LONG_TEXT_06" : "The decryption process uses Cipher, with algorithm 'aes256', plus the key 'CRYPTOGRAPHY_KEY' and an 'IV' (ambus obitidos in OriginalMy). The user's encrypted data string must go through the Base64 decode process with the input in UTF-8, its output is also requested in UTF-8 and the result must be a string to be parsed by JSON. ",
    "LONG_TEXT_07" : "From this result and possession of this information you can process the user's registration and log in.",
    "LONG_TEXT_08" : "As parameters for 'OMID' we have 'CID', 'ENV', 'fields':",
    "LONG_TEXT_09" : "With the 'nonce' of the image obtained in the decryption process, a new request is needed to get the images ('photo' and 'photodocument'). This request must be sent with the Authorization Header with 'OMID_KEY' and 'CID' and 'Token' ('nonce') data.",
    "PARAM_DESC_CID" : "CustomerID provided by OriginalMy",
    "PARAM_DESC_ENV" : "For testing: 'stag', for production: 'prod'",
    "PARAM_DESC_FIELDS" : "Fields requested from the user",
    "PARAM_FIELDS_BIRTHDAY" : "Date of birth",
    "PARAM_FIELDS_BLOCKCHAINID" : "Blockchain ID",
    "PARAM_FIELDS_EMAIL" : "Email",
    "PARAM_FIELDS_NAME" : "Full name",
    "PARAM_FIELDS_NAMEGOV" : "Name in Federal Revenue",
    "PARAM_FIELDS_ID" : "Unique identifier of the country (Ex: CPF for Brazil)",
    "PARAM_FIELDS_MOBILE_IMEI" : "Mobile IMEI",
    "PARAM_FIELDS_MOBILE_BRAND" : "Mobile Brand",
    "PARAM_FIELDS_MOBILE_MODEL" : "Mobile model",
    "PARAM_FIELDS_MOBILE_SO" : "Mobile Operating System",
    "PARAM_FIELDS_MOBILE_SO_VERSION" : "Mobile Operating System Version",
    "PARAM_FIELDS_MOBILE_SCREENSIZE" : "Mobile Screen Size",
    "PARAM_FIELDS_PHONE" : "Mobile number",
    "PARAM_FIELDS_PHOTO" : "A 'nonce' to get the user's photo",
    "PARAM_FIELDS_PHOTODOCUMENT" : "A 'nonce' to get the photo of the user document",
    "PARAM_FIELDS_PHOTODOCUMENTBACK" : "A 'nonce' to get the back photo of the user document",
    "PARAM_FIELDS_RESIDENCE" : "A 'nonce' to get the photo of the user proof of address",
    "PARAM_FIELDS_LATITUDE" : "The current geolocation position",
    "PARAM_FIELDS_LONGITUDE" : "The current geolocation position",
    "PARAM_CRYPTOGRAPHY_KEY": "Cryptography key provided by OriginalMy",
    "PARAM_OMID_KEY": "OMID key provided by OriginalMy",
    "PARAM_AUTHORIZATION": "Chave de API provided by OriginalMy",
    "PARAM_TOKEN": "Provided by user API"
}